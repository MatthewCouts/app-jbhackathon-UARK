apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-university-hackathon
spec:
  selector:
    matchLabels:
      app: app-university-hackathon
  replicas: 2
  template:
    metadata:
      labels:
        app: app-university-hackathon
    spec:
      containers:
      - name: app-university-hackathon
        image: us-south1-docker.pkg.dev/absolute-point-359019/university-hackathon/app-university-hackathon:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: app
        resources:
          limits:
            cpu: "400m"
            memory: "1000Mi"
          requests:
            cpu: "200m"
            memory: "500Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 1
          initialDelaySeconds: 60
          periodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: app-university-hackathon
  labels:
    app: app-university-hackathon
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      name: app
  selector:
    app: app-university-hackathon
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: app-university-hackathon
spec:
  domains:
    - jbhackathon.com
    - www.jbhackathon.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-university-hackathon
  annotations:
    kubernetes.io/ingress.global-static-ip-name: api-university-hackathon
    networking.gke.io/managed-certificates: app-university-hackathon
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "false"
spec:
  defaultBackend:
    service:
      name: app-university-hackathon
      port:
        number: 80
  rules:
    - host: jbhackathon.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app-university-hackathon
                port:
                  number: 80